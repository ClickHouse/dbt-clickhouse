---
name: "test_matrix"

on:  # yamllint disable-line rule:truthy
  pull_request:
    branches: main
  workflow_dispatch:

jobs:
  tests:
    name: Python ${{ matrix.python-version }} | Clickhouse ${{ matrix.clickhouse-version}} | Ubuntu
    runs-on: ubuntu-latest
    timeout-minutes: 45
    env:
      TEST_SETTINGS_FILE: latest

    strategy:
      fail-fast: false
      matrix:
        python-version:
          - '3.9'
          - '3.10'
          - '3.11'
          - '3.12'
        clickhouse-version:  # Testing ClickHouse versions with active security support https://github.com/ClickHouse/ClickHouse/blob/master/SECURITY.md
          - '25.3'
          - '25.6'
          - '25.7'
          - 'latest'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set environment variables
        run: |
          echo "DBT_CH_TEST_CH_VERSION=${{ matrix.clickhouse-version }}" >> $GITHUB_ENV

          # Set DBT_CH_TEST_SETTINGS based on major version
          MAJOR_VERSION=$(echo "${{ matrix.clickhouse-version }}" | cut -d. -f1)
          if [ "$MAJOR_VERSION" -eq 23 ]; then
            echo "DBT_CH_TEST_SETTINGS=23" >> $GITHUB_ENV
          elif [ "$MAJOR_VERSION" -eq 24 ]; then
            echo "DBT_CH_TEST_SETTINGS=24" >> $GITHUB_ENV
          else
            echo "DBT_CH_TEST_SETTINGS=latest" >> $GITHUB_ENV
          fi

      # a fix until docker compose v2.36.0 will be the default version in the github runner
      - name: Install Docker Compose v2.36.0
        run: |
          sudo mkdir -p /usr/local/lib/docker/cli-plugins
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.36.0/docker-compose-linux-x86_64" -o /usr/local/lib/docker/cli-plugins/docker-compose
          sudo chmod +x /usr/local/lib/docker/cli-plugins/docker-compose
          docker compose version

      - name: Run ClickHouse Cluster Containers
        env:
          PROJECT_ROOT: ${{ github.workspace }}/tests/integration
        run: REPLICA_NUM=1 docker compose -f ${{ github.workspace }}/tests/integration/docker-compose.yml up -d

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install requirements
        run: pip3 install . -r dev_requirements.txt

      - name: Run HTTP tests
        env:
          DBT_CH_TEST_CLUSTER: test_shard
        run: |
          PYTHONPATH="${PYTHONPATH}:dbt"
          pytest tests --timeout=120

      - name: Run Native tests
        env:
          DBT_CH_TEST_PORT: 9000
          DBT_CH_TEST_CLUSTER: test_shard
        run: |
          PYTHONPATH="${PYTHONPATH}:dbt"
          pytest tests --timeout=120
